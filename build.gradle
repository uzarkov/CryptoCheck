plugins {
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'groovy'
    id "com.github.node-gradle.node" version "3.3.0"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

def frontendDir = project(':frontend').projectDir

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.thymeleaf:thymeleaf:3.0.15.RELEASE'
    implementation 'com.auth0:java-jwt:3.18.3'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.spockframework:spock-core:2.1-M2-groovy-3.0'
    testImplementation 'org.codehaus.groovy:groovy-all:3.0.8'
}

tasks.named('test') {
    useJUnitPlatform()
}

node {
    nodeProjectDir = file(frontendDir)
}

task buildFrontend(type: NpmTask) {
    dependsOn(npmInstall)
    args = ['run', 'build']
    inputs.dir("${frontendDir}/node_modules")
    inputs.dir("${frontendDir}/public")
    inputs.dir(fileTree("${frontendDir}/src").exclude("**/*.test.js").exclude("**/*.spec.js"))
    outputs.dir("${frontendDir}")
}

bootJar {
    dependsOn(buildFrontend)
    from("${frontendDir}/build") {
        into 'static'
    }
}
